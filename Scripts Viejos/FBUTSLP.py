# login_page_analysis.py
import requests
import urllib3
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def analyze_login_page():
    """Analiza la p√°gina de login real para entender su comportamiento"""
    print("=== AN√ÅLISIS DE P√ÅGINA DE LOGIN ===")
    
    base_url = "https://189.254.143.102"
    session = requests.Session()
    session.verify = False
    
    login_url = f"{base_url}/jsp/index.jsp"
    
    # Obtener la p√°gina de login
    response = session.get(login_url)
    print(f"üìÑ P√°gina de login: Status {response.status_code}, Tama√±o {len(response.text)} bytes")
    
    # Analizar el formulario de login
    soup = BeautifulSoup(response.text, 'html.parser')
    forms = soup.find_all('form')
    
    print(f"üìã Formularios encontrados: {len(forms)}")
    
    for i, form in enumerate(forms):
        print(f"\n--- Formulario {i+1} ---")
        print(f"Action: {form.get('action', 'No action')}")
        print(f"Method: {form.get('method', 'GET')}")
        
        # Encontrar todos los inputs
        inputs = form.find_all('input')
        print("Inputs encontrados:")
        for input_tag in inputs:
            name = input_tag.get('name', 'sin nombre')
            input_type = input_tag.get('type', 'text')
            value = input_tag.get('value', '')
            print(f"  üìù {name} (type: {input_type}, value: '{value}')")
    
    # Buscar mensajes de error o informaci√≥n
    if "error" in response.text.lower():
        print("üîç Mensajes de error encontrados en la p√°gina")
    
    if "contrase√±a" in response.text.lower() or "password" in response.text.lower():
        print("üîç Referencias a contrase√±a encontradas")
    
    # Verificar si hay alg√∫n mensaje de estado de login
    if "sesi√≥n" in response.text.lower() or "session" in response.text.lower():
        print("üîç Referencias a sesi√≥n encontradas")

def test_login_behavior():
    """Prueba el comportamiento del login con credenciales incorrectas"""
    print("\n=== COMPORTAMIENTO DE LOGIN ===")
    
    base_url = "https://189.254.143.102"
    session = requests.Session()
    session.verify = False
    
    login_url = f"{base_url}/jsp/index.jsp"
    
    # Credenciales incorrectas para ver el comportamiento
    login_data = {
        "yAccion": "login",
        "yUsuario": "usuario_inexistente",
        "xUsuario": "usuario_inexistente", 
        "xContrasena": "contrase√±a_incorrecta",
        "yIntentos": "1"
    }
    
    response = session.post(login_url, data=login_data)
    print(f"üìä Respuesta a credenciales incorrectas:")
    print(f"   Status: {response.status_code}")
    print(f"   Tama√±o: {len(response.text)} bytes")
    
    # Buscar mensajes de error espec√≠ficos
    if "incorrecto" in response.text.lower() or "inv√°lido" in response.text.lower():
        print("   ‚úÖ Mensaje de error de login detectado")
    else:
        print("   ‚ùå No se detect√≥ mensaje de error espec√≠fico")
    
    # Comparar con la p√°gina de login normal
    normal_response = session.get(login_url)
    if len(response.text) == len(normal_response.text):
        print("   ‚ö†Ô∏è  Mismo tama√±o que p√°gina de login (posible redirecci√≥n al login)")
    else:
        print("   üîç Tama√±o diferente (posible p√°gina de error o √©xito)")

if __name__ == "__main__":
    analyze_login_page()
    test_login_behavior()